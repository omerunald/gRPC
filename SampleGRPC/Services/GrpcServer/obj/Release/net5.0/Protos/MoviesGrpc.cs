// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protos/movies.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace MyGRPC {
  public static partial class Movies
  {
    static readonly string __ServiceName = "V1.Movies";

    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    static readonly grpc::Marshaller<global::MyGRPC.MoviewRequestModel> __Marshaller_V1_MoviewRequestModel = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::MyGRPC.MoviewRequestModel.Parser));
    static readonly grpc::Marshaller<global::MyGRPC.MovieResponseModel> __Marshaller_V1_MovieResponseModel = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::MyGRPC.MovieResponseModel.Parser));
    static readonly grpc::Marshaller<global::Google.Protobuf.WellKnownTypes.Empty> __Marshaller_google_protobuf_Empty = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Protobuf.WellKnownTypes.Empty.Parser));
    static readonly grpc::Marshaller<global::MyGRPC.MovieListModel> __Marshaller_V1_MovieListModel = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::MyGRPC.MovieListModel.Parser));

    static readonly grpc::Method<global::MyGRPC.MoviewRequestModel, global::MyGRPC.MovieResponseModel> __Method_GetMoviesById = new grpc::Method<global::MyGRPC.MoviewRequestModel, global::MyGRPC.MovieResponseModel>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetMoviesById",
        __Marshaller_V1_MoviewRequestModel,
        __Marshaller_V1_MovieResponseModel);

    static readonly grpc::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::MyGRPC.MovieResponseModel> __Method_GetMoviesFirst = new grpc::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::MyGRPC.MovieResponseModel>(
        grpc::MethodType.ServerStreaming,
        __ServiceName,
        "GetMoviesFirst",
        __Marshaller_google_protobuf_Empty,
        __Marshaller_V1_MovieResponseModel);

    static readonly grpc::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::MyGRPC.MovieListModel> __Method_GetMovies = new grpc::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::MyGRPC.MovieListModel>(
        grpc::MethodType.ServerStreaming,
        __ServiceName,
        "GetMovies",
        __Marshaller_google_protobuf_Empty,
        __Marshaller_V1_MovieListModel);

    static readonly grpc::Method<global::MyGRPC.MoviewRequestModel, global::MyGRPC.MovieListModel> __Method_SetMovies = new grpc::Method<global::MyGRPC.MoviewRequestModel, global::MyGRPC.MovieListModel>(
        grpc::MethodType.ClientStreaming,
        __ServiceName,
        "SetMovies",
        __Marshaller_V1_MoviewRequestModel,
        __Marshaller_V1_MovieListModel);

    static readonly grpc::Method<global::MyGRPC.MoviewRequestModel, global::MyGRPC.MovieResponseModel> __Method_SetGetMovies = new grpc::Method<global::MyGRPC.MoviewRequestModel, global::MyGRPC.MovieResponseModel>(
        grpc::MethodType.DuplexStreaming,
        __ServiceName,
        "SetGetMovies",
        __Marshaller_V1_MoviewRequestModel,
        __Marshaller_V1_MovieResponseModel);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::MyGRPC.MoviesReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of Movies</summary>
    [grpc::BindServiceMethod(typeof(Movies), "BindService")]
    public abstract partial class MoviesBase
    {
      public virtual global::System.Threading.Tasks.Task<global::MyGRPC.MovieResponseModel> GetMoviesById(global::MyGRPC.MoviewRequestModel request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task GetMoviesFirst(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::IServerStreamWriter<global::MyGRPC.MovieResponseModel> responseStream, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task GetMovies(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::IServerStreamWriter<global::MyGRPC.MovieListModel> responseStream, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::MyGRPC.MovieListModel> SetMovies(grpc::IAsyncStreamReader<global::MyGRPC.MoviewRequestModel> requestStream, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task SetGetMovies(grpc::IAsyncStreamReader<global::MyGRPC.MoviewRequestModel> requestStream, grpc::IServerStreamWriter<global::MyGRPC.MovieResponseModel> responseStream, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static grpc::ServerServiceDefinition BindService(MoviesBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_GetMoviesById, serviceImpl.GetMoviesById)
          .AddMethod(__Method_GetMoviesFirst, serviceImpl.GetMoviesFirst)
          .AddMethod(__Method_GetMovies, serviceImpl.GetMovies)
          .AddMethod(__Method_SetMovies, serviceImpl.SetMovies)
          .AddMethod(__Method_SetGetMovies, serviceImpl.SetGetMovies).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the  service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static void BindService(grpc::ServiceBinderBase serviceBinder, MoviesBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_GetMoviesById, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::MyGRPC.MoviewRequestModel, global::MyGRPC.MovieResponseModel>(serviceImpl.GetMoviesById));
      serviceBinder.AddMethod(__Method_GetMoviesFirst, serviceImpl == null ? null : new grpc::ServerStreamingServerMethod<global::Google.Protobuf.WellKnownTypes.Empty, global::MyGRPC.MovieResponseModel>(serviceImpl.GetMoviesFirst));
      serviceBinder.AddMethod(__Method_GetMovies, serviceImpl == null ? null : new grpc::ServerStreamingServerMethod<global::Google.Protobuf.WellKnownTypes.Empty, global::MyGRPC.MovieListModel>(serviceImpl.GetMovies));
      serviceBinder.AddMethod(__Method_SetMovies, serviceImpl == null ? null : new grpc::ClientStreamingServerMethod<global::MyGRPC.MoviewRequestModel, global::MyGRPC.MovieListModel>(serviceImpl.SetMovies));
      serviceBinder.AddMethod(__Method_SetGetMovies, serviceImpl == null ? null : new grpc::DuplexStreamingServerMethod<global::MyGRPC.MoviewRequestModel, global::MyGRPC.MovieResponseModel>(serviceImpl.SetGetMovies));
    }

  }
}
#endregion
